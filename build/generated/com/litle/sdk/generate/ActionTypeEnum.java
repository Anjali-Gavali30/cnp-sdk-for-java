//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.06 at 01:40:28 PM EDT 
//


package com.litle.sdk.generate;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for actionTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="actionTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="A"/>
 *     &lt;enumeration value="D"/>
 *     &lt;enumeration value="R"/>
 *     &lt;enumeration value="AR"/>
 *     &lt;enumeration value="G"/>
 *     &lt;enumeration value="I"/>
 *     &lt;enumeration value="J"/>
 *     &lt;enumeration value="L"/>
 *     &lt;enumeration value="LR"/>
 *     &lt;enumeration value="P"/>
 *     &lt;enumeration value="RR"/>
 *     &lt;enumeration value="S"/>
 *     &lt;enumeration value="T"/>
 *     &lt;enumeration value="UR"/>
 *     &lt;enumeration value="V"/>
 *     &lt;enumeration value="W"/>
 *     &lt;enumeration value="X"/>
 *     &lt;enumeration value=""/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "actionTypeEnum")
@XmlEnum
public enum ActionTypeEnum {

    A("A"),
    D("D"),
    R("R"),
    AR("AR"),
    G("G"),
    I("I"),
    J("J"),
    L("L"),
    LR("LR"),
    P("P"),
    RR("RR"),
    S("S"),
    T("T"),
    UR("UR"),
    V("V"),
    W("W"),
    X("X"),
    @XmlEnumValue("")
    BLANK("");
    private final String value;

    ActionTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ActionTypeEnum fromValue(String v) {
        for (ActionTypeEnum c: ActionTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
